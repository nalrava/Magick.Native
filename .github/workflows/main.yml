on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  workflow_dispatch:
  schedule:
    - cron:  '0 2 * * *'

name: main
jobs:
  windows:
    name: 'Windows'
    runs-on: windows-2022

    strategy:
      matrix:
        quantumName: [Q8, Q8-OpenMP, Q16, Q16-OpenMP, Q16-HDRI, Q16-HDRI-OpenMP]
        platformName: [x86, x64, arm64]
        exclude:
        - quantumName: Q8-OpenMP
          platformName: x86
        - quantumName: Q16-OpenMP
          platformName: x86
        - quantumName: Q16-HDRI-OpenMP
          platformName: x86

    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Install dependencies
      run: ./install.dependencies.ps1
      working-directory: build/windows

    - name: Update ImageMagick.commit to latest commit
      run: ./update.imagemagick.cmd
      if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      working-directory: src/ImageMagick

    - name: Clone ImageMagick libraries
      run: ./checkout.cmd ../../../artifacts/windows
      working-directory: src/ImageMagick

    - name: Build ImageMagick
      run: ./build.ImageMagick.cmd ${{ matrix.quantumName }} ${{ matrix.platformName }}
      working-directory: build/windows

    - name: Update resource files
      run: ./update.resourcefiles.ps1
      working-directory: build/windows

    - name: Build Native
      run: ./build.Native.cmd ${{ matrix.quantumName }} ${{ matrix.platformName }}
      working-directory: build/windows

    - name: Copy Native
      run: ./copy.Native.ps1 -quantumName ${{ matrix.quantumName }} -platformName ${{ matrix.platformName }} -destination ../../artifacts
      working-directory: build/windows

    - name: Sign binaries
      if: github.event_name != 'pull_request'
      uses: azure/azure-code-signing-action@v0.2.22
      with:
        azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
        azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
        endpoint: https://eus.codesigning.azure.net/
        code-signing-account-name: ImageMagick
        certificate-profile-name: ImageMagick
        files-folder: 'artifacts\windows\Release${{ matrix.quantumName }}\${{ matrix.platformName }}'
        files-folder-filter: dll
        file-digest: SHA256
        timestamp-rfc3161: http://timestamp.acs.microsoft.com
        timestamp-digest: SHA256

    - name: Upload library
      uses: actions/upload-artifact@v3
      with:
        name: windows
        path: artifacts/windows

    - name: Upload resources
      uses: actions/upload-artifact@v3
      with:
        name: resources
        path: artifacts/resources

  wasm:
    name: 'WASM (x86)'
    container:
      image: emscripten/emsdk:3.1.42
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Install dependencies
      run: ./install.dependencies.sh
      working-directory: build/wasm-x86

    - name: Update ImageMagick.commit to latest commit
      run: ./update.imagemagick.sh
      if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      working-directory: src/ImageMagick

    - name: Clone ImageMagick libraries
      run: ./checkout.sh wasm ../../../artifacts
      working-directory: src/ImageMagick

    - name: Build libraries
      run: ../../../build/shared/build.Libraries.sh ../../../build/libraries wasm x86
      working-directory: src/ImageMagick/libraries

    - name: Build ImageMagick
      run: ../../../build/shared/build.ImageMagick.sh wasm x86
      working-directory: src/ImageMagick/libraries

    - name: Build Native
      run: ../../build/shared/build.Native.sh wasm x86
      working-directory: src/Magick.Native

    - name: Create type definition
      run: npm install && npm run publish
      working-directory: src/create-type-definition

    - name: Copy Native
      run: ../../build/wasm-x86/copy.Native.sh ../../artifacts
      working-directory: src/Magick.Native

    - name: Upload library
      uses: actions/upload-artifact@v3
      with:
        name: wasm
        path: artifacts

  metadata:
    name: 'Metadata'
    needs:
      - windows
      - wasm
    runs-on: windows-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Install dependencies
      run: ./install.dependencies.ps1
      working-directory: build/windows

    - name: Update ImageMagick.commit to latest commit
      run: ./update.imagemagick.cmd
      if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      working-directory: src/ImageMagick

    - name: Clone ImageMagick libraries
      run: ./checkout.cmd
      working-directory: src/ImageMagick

    - name: Create metadata
      run: ./create.metadata.ps1 -destination ../../artifacts
      working-directory: build/metadata

    - name: Upload metadata
      uses: actions/upload-artifact@v3
      with:
        name: metadata
        path: artifacts

  publish_wasm:
    name: 'Publish WASM library'
    needs:
      - metadata
    runs-on: windows-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Install dependencies
      run: ./install.dependencies.ps1
      working-directory: build/windows

    - name: Download wasm library
      uses: actions/download-artifact@v3
      with:
        name: wasm
        path: publish\wasm\files

    - uses: actions/setup-node@v4
      with:
        node-version: 16
        registry-url: https://npm.pkg.github.com
        scope: '@dlemstra'

    - name: Create NPM package
      run: ./publish.ps1 -destination artifacts
      working-directory: publish/wasm

    - name: Publish NPM package
      if: github.event_name != 'pull_request'
      run: npm publish
      working-directory: publish/wasm/files
      env:
        NODE_AUTH_TOKEN: ${{ secrets.PUBLISH_PACKAGE_PAT }}
